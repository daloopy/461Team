/*
 * ECE 461 - Spring 2023 - Project 2
 *
 * API for ECE 461/Spring 2023/Project 2: A Trustworthy Module Registry
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: davisjam@purdue.edu
 * Generated by: https://openapi-generator.tech
 */

/// PackageData : This is a \"union\" type. - On package upload, either Content or URL should be set. - On package update, exactly one field should be set. - On download, the Content field should be set.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PackageData {
    /// Package contents. This is the zip file uploaded by the user. (Encoded as text using a Base64 encoding).  This will be a zipped version of an npm package's GitHub repository, minus the \".git/\" directory.\" It will, for example, include the \"package.json\" file that can be used to retrieve the project homepage.  See https://docs.npmjs.com/cli/v7/configuring-npm/package-json#homepage.
    #[serde(rename = "Content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// Package URL (for use in public ingest).
    #[serde(rename = "URL", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// A JavaScript program (for use with sensitive modules).
    #[serde(rename = "JSProgram", skip_serializing_if = "Option::is_none")]
    pub js_program: Option<String>,
}

impl PackageData {
    /// This is a \"union\" type. - On package upload, either Content or URL should be set. - On package update, exactly one field should be set. - On download, the Content field should be set.
    pub fn new() -> PackageData {
        PackageData {
            content: None,
            url: None,
            js_program: None,
        }
    }
}


